import{b2 as d,l as O,aZ as h,b3 as D,b4 as P,b5 as T,aQ as v,b6 as R,w as J,aY as g,aX as _,aV as $}from"./eo-dash.E_vsmdGi.js";import{i as k}from"./utils.DZj92Qv1.js";function I(e){return Object.keys((e==null?void 0:e.properties)??{}).find(r=>(e==null?void 0:e.properties[r].format)==="bounding-box")}function C(e){return Object.keys((e==null?void 0:e.properties)??{}).filter(r=>(e==null?void 0:e.properties[r].type)==="geojson")}function B(e,r){const t=C(r);for(const o of t)e[o]&&(k(r==null?void 0:r.properties[o])?e[o]=e[o].features.map(s=>JSON.stringify(s.geometry)):e[o]=JSON.stringify(e[o].geometry))}async function K(e,r,t,o,s){let a=null;"eox:flatstyle"in(e??{})&&(a=await g.get(e["eox:flatstyle"]).then(n=>n.data));let l,i;if(a){const n=h(r??"",a);l=n.layerConfig,i=n.style}t=t.sort();const c=t.length>0?{type:"WebGLTile",source:{type:"GeoTIFF",normalize:!i,sources:t.map(n=>({url:n}))},properties:{id:e.id+"_process"+s,title:"Results "+r,...l&&{layerConfig:l},layerControlToolsExpand:!0},...i&&{style:i}}:void 0;return o&&c&&(c.source.projection=o),c}const L=(e,r)=>{if(!r)return;let t=r;if(typeof r=="object"){r=JSON.stringify(r);const s=new Blob([r],{type:"text"});t=URL.createObjectURL(s)}const o=document.createElement("a");confirm(`Would you like to download ${e}?`)&&(o.href=t,o.download=e,o.click()),URL.revokeObjectURL(t),o.remove()};function W(e,r,t){let o="",s="";[o,s]=r??["",""];const[a,l]=e??["",""];try{if(o&&s?(o=new Date(o),s=new Date(s)):(o=new Date(a),s=new Date(l)),(o<new Date(a)||o>new Date(l))&&(console.warn("[eodash] warn: start date is outside of the collection temporal extent and will be clamped",`
provided start date:${o.toISOString()}`,`
collection start date:${a}`),o=new Date(a)),(s>new Date(l)||s<new Date(a))&&(console.warn("[eodash] warn: end date is outside of the collection temporal extent and will be clamped",`
provided end date:${s.toISOString()}`,`
collection end date:${l}`),s=new Date(l)),o>s)return console.error("[eodash] Error: start date is greater than end date",o,s),[]}catch(y){return console.error("[eodash] Invalid date:",y.message),[]}const i=o.toISOString(),c=s.toISOString();if(!i||!c)return[];const n=[];let u=new Date(c);const f=new Date(i),p=24*60*60*1e3,w=t==="daily"?p:t==="weekly"?p*7:t==="monthly"?p*30:t==="yearly"?p*365:p;for(;u>=f&&n.length<31;)n.push(new Date(u)),u.setTime(u.getTime()-w);const b=[];for(let y=0;y<n.length-1;y++)b.push([n[y].toISOString(),n[y+1].toISOString()]);return b}function z(e,r,t){if(!e)return[[],[]];const o=[],s=[];for(const a of e){const l=a.rel===r,i=t?a.type===t:!0;l&&i&&(a.endpoint?s.push(a):o.push(a))}return[o,s]}async function N(e,r,t,o=""){var l;const s=[],a=await U(r);for(const i of e){const c=m(i,a);let n,u;if(c){const p=h((t==null?void 0:t.id)??"",c);u=p.layerConfig,n=p.style}let f=D(t);switch(i.type){case"image/tiff":{s.push({type:"WebGLTile",properties:{id:r.id+"_process"+i.id+o,title:"Results "+((t==null?void 0:t.id)??"")+" "+(i.id??""),layerControlToolsExpand:!0,...u&&{layerConfig:u},...f},source:{type:"GeoTIFF",normalize:!n,sources:i.urls.map(p=>({url:p})),...((l=t["eodash:mapProjection"])==null?void 0:l.name)&&{projection:t["eodash:mapProjection"].name}},...n&&{style:n}});break}case"application/geo+json":{const p=await P(i.urls);s.push({type:"Vector",source:{type:"Vector",format:"GeoJSON",...p&&{url:p}},properties:{id:r.id+"_process_"+i.id+o,title:"Results "+((t==null?void 0:t.id)??"")+" "+(i.id??""),...u&&{layerConfig:{...u,style:n}},...f},...!(n!=null&&n.variables)&&{style:n},interactions:[]});break}case"application/vnd.flatgeobuf":{i.urls.forEach((p,w)=>{s.push({type:"Vector",source:{type:"FlatGeoBuf",url:p},properties:{id:r.id+"_process_"+i.id+o+`_${w}`,title:"Results "+((t==null?void 0:t.id)??"")+" "+(i.id??""),layerControlToolsExpand:!0,...u&&{layerConfig:{...u,style:n}},...f}})});break}default:console.warn(`[eodash] Unsupported result type "${i.type}" for ${i.id} layer creation.`);break}}return s}async function U(e){let r=null;return e["eox:flatstyle"]&&(typeof e["eox:flatstyle"]=="string"?r=await g.get(e["eox:flatstyle"]).then(t=>t.data):Array.isArray(e["eox:flatstyle"])&&e["eox:flatstyle"].length?(r={multipleStyles:!0},await Promise.all(e["eox:flatstyle"].map(async t=>{r[t.id]=await g.get(t.url).then(o=>o.data)}))):(r={multipleStyles:!0},await Promise.all(Object.keys(e["eox:flatstyle"]??{}).map(t=>{r[t]=g.get(e["eox:flatstyle"][t]).then(o=>o.data)})))),r}function m(e,r){if(!r)return;if(!("multipleStyles"in r))return r;const t=e.id;if(!(!t||!(t in r)))return r[t]}function G(e){if(!e)return[];if("urls"in e&&Array.isArray(e.urls))return[{id:"",urls:e.urls,type:"image/tiff"}];const r=[];for(const t in e)t!=="id"&&r.push({id:t,urls:e[t].urls,type:e[t].mimetype});return r}const E=(e,r)=>{var a;if(!r.length||!e)return;const o=[...(e.id==="compare"?T:v)()];let s=o.find(l=>{var i;return(i=l.properties)==null?void 0:i.id.includes("AnalysisGroup")});if(s){for(const l of r)s.layers.find(c=>{var n,u;return((n=c.properties)==null?void 0:n.id)===((u=l.properties)==null?void 0:u.id)})?s.layers=R(s.layers,((a=l.properties)==null?void 0:a.id)??"",[l]):s.layers.unshift(l);if(e){const l=[...o],i=e.id==="compare"?"compareProcess:updated":"process:updated";J(i,e,l),e.layers=l}}};function Q(e){if(!e)return e;const r=JSON.stringify(e).replaceAll("eox-map#main","eox-map#compare");return JSON.parse(r)}async function X({jobs:e,processUrl:r,isPolling:t,pollInterval:o=1e4,maxRetries:s=560,enableCompare:a=!1}){let l=0;for(t.value=!0,setTimeout(()=>{x(e,a?_.value:$.value)},500);l<s&&t.value;){try{const i=new Date().getTime(),n=(await d.get(`${r}?t=${i}`)).data;if(n.status==="successful"){console.log("Process completed successfully. Fetching result item...");const u=n.links[1].href;if(!u)throw new Error("Result links not found in the process report.");const f=await d.get(u);return console.log("Result file fetched successfully:",f.data),f.data}if(n.status==="failed")throw t.value=!1,new Error("Process failed.",n);console.log(`Status: ${n.status}. Retrying in ${o/1e3} seconds...`)}catch(i){i instanceof Error?console.error("Error while polling process status:",i.message):console.error("Unknown error occurred:",i)}await new Promise(i=>setTimeout(i,o)),l++}if(!t.value)return console.warn("Polling was stopped before the process was completed."),JSON.parse("{}");throw new Error("Max retries reached. Process did not complete successfully.")}async function x(e,r){const t=JSON.parse(localStorage.getItem(r)||"[]"),o=await Promise.all(t.map(s=>d.get(s,{params:{t:Date.now()}}).then(a=>a.data)));o.sort((s,a)=>new Date(a.job_start_datetime).getTime()-new Date(s.job_start_datetime).getTime()),e.value=o}const Y=async(e,r,t)=>{const s=JSON.parse(localStorage.getItem(t)||"[]").filter(a=>!a.includes(r.jobID));localStorage.setItem(t,JSON.stringify(s)),await x(e,t)},Z=async(e,r)=>{const t=[],o=e.links.find(s=>s.rel.includes("results")&&s.type=="application/json");o&&(await d.get(o.href).then(s=>s.data).then(s=>{if(s.urls)t.push(...s.urls);else for(const a of Object.values(s))t.push(...a.urls)}),t.forEach(s=>{if(!s)return;let a="";typeof s=="string"?(a=s.includes("/")?s.split("/").pop()??"":s,a=a.includes("?")?a.split("?")[0]:a):a=(r==null?void 0:r.id)+"_process_results.json",L(a,s)}))},q=async(e,r,t)=>{const o=await d.get(e.links[1].href).then(s=>s.data);await A({selectedStac:r,results:o,jobId:e.jobID,mapElement:t})};async function A({selectedStac:e,results:r,jobId:t,mapElement:o}){const s=e==null?void 0:e.links.find(i=>i.rel==="service"&&i.endpoint=="eoxhub_workspaces");if(!s)return;const a=G(r),l=await N(a,s,e,t);O.debug("rendered layers after loading previous process:",l),E(o,l)}export{E as a,G as b,K as c,x as d,B as e,N as f,I as g,W as h,Z as i,Y as j,L as k,q as l,X as p,z as s,Q as u};
